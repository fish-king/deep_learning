#自定义的loss函数
def yolo_loss(args,
              anchors,
              num_classes,
              rescore_confidence=False,
              print_loss=False):
    return loss

#模型主体机构
model_body = Model(image_input, final_layer)

#额外添加Lambda自定义层可在arguments传入多个额外输入
#keras.layers.core.Lambda(function, output_shape=None, arguments=None)
model_loss = Lambda(
    yolo_loss,
    output_shape=(1, ),
    name='yolo_loss',
    arguments={'anchors': anchors,
               'num_classes': len(class_names)})([
                   model_body.output, boxes_input,
                   detectors_mask_input, matching_boxes_input
               ])
               
#将loss层与模型主题拼接为loss模型
model = Model(
    [model_body.input, boxes_input, detectors_mask_input,
     matching_boxes_input], model_loss)
     
#loss模型编译训练，模型的输出也同时是loss
model.compile(
        optimizer='adam', loss={
            'yolo_loss': lambda y_true, y_pred: y_pred
        })
#loss模型训练完成即去点loss层model_body训练完成
